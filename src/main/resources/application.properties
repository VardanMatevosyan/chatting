server.port=3000


spring.security.oauth2.resourceserver.jwt.issuer-uri=${oauth0-host}/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${oauth0-host}/.well-known/jwks.json

##client configuration
spring.security.oauth2.client.registration.auth0.client-id=${client-id}
spring.security.oauth2.client.registration.auth0.client-secret=${client-secret}
spring.security.oauth2.client.registration.auth0.scope=openid,email,profile,picture
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:3000/login/oauth2/code/auth0

#provider
spring.security.oauth2.client.provider.auth0.issuer-uri=${oauth0-host}/
spring.security.oauth2.client.provider.auth0.authorization-uri=${oauth0-host}/authorize
spring.security.oauth2.client.provider.auth0.user-info-uri=${oauth0-host}/userinfo
spring.security.oauth2.client.provider.auth0.token-uri=${oauth0-host}/oauth/token
spring.security.oauth2.client.provider.auth0.user-name-attribute=email

#web socket message broker
chat.relay.host=localhost
chat.relay.port=61613

# spring session - redis configuration
spring.data.redis.host=localhost
spring.data.redis.password=redis_pass
spring.data.redis.port=6379